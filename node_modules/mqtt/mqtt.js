const mqtt = require('mqtt');

class MQTTClient {
  constructor(brokerUrl, options) {
    this.client = mqtt.connect(brokerUrl, options);
    this.topics = {};
  }

  subscribe(topic, callback) {
    if (!this.topics[topic]) {
      this.client.subscribe(topic, (err) => {
        if (!err) {
          this.topics[topic] = true;
        }
      });
    }

    this.client.on('message', (receivedTopic, message) => {
      if (receivedTopic === topic) {
        const parsedMessage = JSON.parse(message.toString());
        callback(parsedMessage);
      }
    });
  }

  publish(topic, message) {
    this.client.publish(topic, JSON.stringify(message));
  }

  close() {
    Object.keys(this.topics).forEach((topic) => {
      this.client.unsubscribe(topic);
    });
    this.client.end();
  }
}

module.exports = MQTTClient;